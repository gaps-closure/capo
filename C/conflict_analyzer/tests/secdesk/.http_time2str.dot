digraph "CFG for 'http_time2str' function" {
	label="CFG for 'http_time2str' function";

	Node0x5568522bc630 [shape=record,label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca i8*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca %struct.rlimit, align 8\l  %8 = alloca %struct.tm, align 8\l  %9 = alloca %struct.tm, align 8\l  store i8* %0, i8** %4, align 8\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !2801, metadata\l... !DIExpression()), !dbg !2802\l  store i64 %1, i64* %5, align 8\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !2803, metadata\l... !DIExpression()), !dbg !2804\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !2805, metadata\l... !DIExpression()), !dbg !2806\l  %10 = call \{ i64, i64 \} @fio_last_tick(), !dbg !2807\l  %11 = bitcast %struct.rlimit* %7 to \{ i64, i64 \}*, !dbg !2807\l  %12 = getelementptr inbounds \{ i64, i64 \}, \{ i64, i64 \}* %11, i32 0, i32 0,\l... !dbg !2807\l  %13 = extractvalue \{ i64, i64 \} %10, 0, !dbg !2807\l  store i64 %13, i64* %12, align 8, !dbg !2807\l  %14 = getelementptr inbounds \{ i64, i64 \}, \{ i64, i64 \}* %11, i32 0, i32 1,\l... !dbg !2807\l  %15 = extractvalue \{ i64, i64 \} %10, 1, !dbg !2807\l  store i64 %15, i64* %14, align 8, !dbg !2807\l  %16 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %7, i32 0, i32\l... 0, !dbg !2808\l  %17 = load i64, i64* %16, align 8, !dbg !2808\l  store i64 %17, i64* %6, align 8, !dbg !2806\l  %18 = load i64, i64* %5, align 8, !dbg !2809\l  %19 = or i64 %18, 7, !dbg !2811\l  %20 = load i64, i64* %6, align 8, !dbg !2812\l  %21 = icmp slt i64 %19, %20, !dbg !2813\l  br i1 %21, label %22, label %27, !dbg !2814\l|{<s0>T|<s1>F}}"];
	Node0x5568522bc630:s0 -> Node0x5568522bcf10;
	Node0x5568522bc630:s1 -> Node0x5568522bcf60;
	Node0x5568522bcf10 [shape=record,label="{%22:\l22:                                               \l  call void @llvm.dbg.declare(metadata %struct.tm* %8, metadata !2815,\l... metadata !DIExpression()), !dbg !2831\l  %23 = load i64, i64* %5, align 8, !dbg !2832\l  %24 = call %struct.tm* @http_gmtime(i64 %23, %struct.tm* %8), !dbg !2833\l  %25 = load i8*, i8** %4, align 8, !dbg !2834\l  %26 = call i64 @http_date2str(i8* %25, %struct.tm* %8), !dbg !2835\l  store i64 %26, i64* %3, align 8, !dbg !2836\l  br label %40, !dbg !2836\l}"];
	Node0x5568522bcf10 -> Node0x5568522bd050;
	Node0x5568522bcf60 [shape=record,label="{%27:\l27:                                               \l  %28 = load i64, i64* %6, align 8, !dbg !2837\l  %29 = load i64, i64* @http_time2str.cached_tick, align 8, !dbg !2839\l  %30 = icmp sgt i64 %28, %29, !dbg !2840\l  br i1 %30, label %31, label %36, !dbg !2841\l|{<s0>T|<s1>F}}"];
	Node0x5568522bcf60:s0 -> Node0x5568522bcfb0;
	Node0x5568522bcf60:s1 -> Node0x5568522bd000;
	Node0x5568522bcfb0 [shape=record,label="{%31:\l31:                                               \l  call void @llvm.dbg.declare(metadata %struct.tm* %9, metadata !2842,\l... metadata !DIExpression()), !dbg !2844\l  %32 = load i64, i64* %6, align 8, !dbg !2845\l  store i64 %32, i64* @http_time2str.cached_tick, align 8, !dbg !2846\l  %33 = load i64, i64* %6, align 8, !dbg !2847\l  %34 = call %struct.tm* @http_gmtime(i64 %33, %struct.tm* %9), !dbg !2848\l  %35 = call i64 @http_date2str(i8* getelementptr inbounds ([48 x i8], [48 x\l... i8]* @http_time2str.cached_httpdate, i64 0, i64 0), %struct.tm* %9), !dbg\l... !2849\l  store i64 %35, i64* @http_time2str.cached_len, align 8, !dbg !2850\l  br label %36, !dbg !2851\l}"];
	Node0x5568522bcfb0 -> Node0x5568522bd000;
	Node0x5568522bd000 [shape=record,label="{%36:\l36:                                               \l  %37 = load i8*, i8** %4, align 8, !dbg !2852\l  %38 = load i64, i64* @http_time2str.cached_len, align 8, !dbg !2853\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 16\l... getelementptr inbounds ([48 x i8], [48 x i8]* @http_time2str.cached_httpdate,\l... i64 0, i64 0), i64 %38, i1 false), !dbg !2854\l  %39 = load i64, i64* @http_time2str.cached_len, align 8, !dbg !2855\l  store i64 %39, i64* %3, align 8, !dbg !2856\l  br label %40, !dbg !2856\l}"];
	Node0x5568522bd000 -> Node0x5568522bd050;
	Node0x5568522bd050 [shape=record,label="{%40:\l40:                                               \l  %41 = load i64, i64* %3, align 8, !dbg !2857\l  ret i64 %41, !dbg !2857\l}"];
}
