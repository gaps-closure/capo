digraph "CFG for 'fio_timer_calc_first_interval' function" {
	label="CFG for 'fio_timer_calc_first_interval' function";

	Node0x5568512ee660 [shape=record,label="{%0:\l  %1 = alloca i64, align 8\l  %2 = alloca %struct.rlimit, align 8\l  %3 = alloca %struct.rlimit, align 8\l  %4 = alloca i64, align 8\l  %5 = call i32 @fio_defer_has_queue(), !dbg !2803\l  %6 = icmp ne i32 %5, 0, !dbg !2803\l  br i1 %6, label %7, label %8, !dbg !2805\l|{<s0>T|<s1>F}}"];
	Node0x5568512ee660:s0 -> Node0x5568512ee730;
	Node0x5568512ee660:s1 -> Node0x5568512ee780;
	Node0x5568512ee730 [shape=record,label="{%7:\l7:                                                \l  store i64 0, i64* %1, align 8, !dbg !2806\l  br label %80, !dbg !2806\l}"];
	Node0x5568512ee730 -> Node0x5568512eeb40;
	Node0x5568512ee780 [shape=record,label="{%8:\l8:                                                \l  %9 = call i32 @fio_ls_embd_is_empty(%struct.fio_ls_embd_s* @fio_timers),\l... !dbg !2807\l  %10 = icmp ne i32 %9, 0, !dbg !2807\l  br i1 %10, label %11, label %12, !dbg !2809\l|{<s0>T|<s1>F}}"];
	Node0x5568512ee780:s0 -> Node0x5568512ee7d0;
	Node0x5568512ee780:s1 -> Node0x5568512ee820;
	Node0x5568512ee7d0 [shape=record,label="{%11:\l11:                                               \l  store i64 1000, i64* %1, align 8, !dbg !2810\l  br label %80, !dbg !2810\l}"];
	Node0x5568512ee7d0 -> Node0x5568512eeb40;
	Node0x5568512ee820 [shape=record,label="{%12:\l12:                                               \l  call void @llvm.dbg.declare(metadata %struct.rlimit* %2, metadata !2812,\l... metadata !DIExpression()), !dbg !2813\l  %13 = call \{ i64, i64 \} @fio_last_tick(), !dbg !2814\l  %14 = bitcast %struct.rlimit* %2 to \{ i64, i64 \}*, !dbg !2814\l  %15 = getelementptr inbounds \{ i64, i64 \}, \{ i64, i64 \}* %14, i32 0, i32 0,\l... !dbg !2814\l  %16 = extractvalue \{ i64, i64 \} %13, 0, !dbg !2814\l  store i64 %16, i64* %15, align 8, !dbg !2814\l  %17 = getelementptr inbounds \{ i64, i64 \}, \{ i64, i64 \}* %14, i32 0, i32 1,\l... !dbg !2814\l  %18 = extractvalue \{ i64, i64 \} %13, 1, !dbg !2814\l  store i64 %18, i64* %17, align 8, !dbg !2814\l  call void @llvm.dbg.declare(metadata %struct.rlimit* %3, metadata !2815,\l... metadata !DIExpression()), !dbg !2816\l  %19 = load %struct.fio_ls_embd_s*, %struct.fio_ls_embd_s** getelementptr\l... inbounds (%struct.fio_ls_embd_s, %struct.fio_ls_embd_s* @fio_timers, i32 0,\l... i32 1), align 8, !dbg !2817\l  %20 = ptrtoint %struct.fio_ls_embd_s* %19 to i64, !dbg !2817\l  %21 = sub i64 %20, 0, !dbg !2817\l  %22 = inttoptr i64 %21 to %struct.fio_timer_s*, !dbg !2817\l  %23 = getelementptr inbounds %struct.fio_timer_s, %struct.fio_timer_s* %22,\l... i32 0, i32 1, !dbg !2818\l  %24 = bitcast %struct.rlimit* %3 to i8*, !dbg !2818\l  %25 = bitcast %struct.rlimit* %23 to i8*, !dbg !2818\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64\l... 16, i1 false), !dbg !2818\l  %26 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %3, i32 0, i32\l... 0, !dbg !2819\l  %27 = load i64, i64* %26, align 8, !dbg !2819\l  %28 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %2, i32 0, i32\l... 0, !dbg !2821\l  %29 = load i64, i64* %28, align 8, !dbg !2821\l  %30 = icmp slt i64 %27, %29, !dbg !2822\l  br i1 %30, label %43, label %31, !dbg !2823\l|{<s0>T|<s1>F}}"];
	Node0x5568512ee820:s0 -> Node0x5568512ee910;
	Node0x5568512ee820:s1 -> Node0x5568512ee870;
	Node0x5568512ee870 [shape=record,label="{%31:\l31:                                               \l  %32 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %3, i32 0, i32\l... 0, !dbg !2824\l  %33 = load i64, i64* %32, align 8, !dbg !2824\l  %34 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %2, i32 0, i32\l... 0, !dbg !2825\l  %35 = load i64, i64* %34, align 8, !dbg !2825\l  %36 = icmp eq i64 %33, %35, !dbg !2826\l  br i1 %36, label %37, label %44, !dbg !2827\l|{<s0>T|<s1>F}}"];
	Node0x5568512ee870:s0 -> Node0x5568512ee8c0;
	Node0x5568512ee870:s1 -> Node0x5568512ee960;
	Node0x5568512ee8c0 [shape=record,label="{%37:\l37:                                               \l  %38 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %3, i32 0, i32\l... 1, !dbg !2828\l  %39 = load i64, i64* %38, align 8, !dbg !2828\l  %40 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %2, i32 0, i32\l... 1, !dbg !2829\l  %41 = load i64, i64* %40, align 8, !dbg !2829\l  %42 = icmp sle i64 %39, %41, !dbg !2830\l  br i1 %42, label %43, label %44, !dbg !2831\l|{<s0>T|<s1>F}}"];
	Node0x5568512ee8c0:s0 -> Node0x5568512ee910;
	Node0x5568512ee8c0:s1 -> Node0x5568512ee960;
	Node0x5568512ee910 [shape=record,label="{%43:\l43:                                               \l  store i64 0, i64* %1, align 8, !dbg !2832\l  br label %80, !dbg !2832\l}"];
	Node0x5568512ee910 -> Node0x5568512eeb40;
	Node0x5568512ee960 [shape=record,label="{%44:\l44:                                               \l  call void @llvm.dbg.declare(metadata i64* %4, metadata !2833, metadata\l... !DIExpression()), !dbg !2834\l  %45 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %3, i32 0, i32\l... 0, !dbg !2835\l  %46 = load i64, i64* %45, align 8, !dbg !2835\l  %47 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %2, i32 0, i32\l... 0, !dbg !2836\l  %48 = load i64, i64* %47, align 8, !dbg !2836\l  %49 = sub nsw i64 %46, %48, !dbg !2837\l  %50 = mul nsw i64 1000, %49, !dbg !2838\l  store i64 %50, i64* %4, align 8, !dbg !2834\l  %51 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %3, i32 0, i32\l... 1, !dbg !2839\l  %52 = load i64, i64* %51, align 8, !dbg !2839\l  %53 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %2, i32 0, i32\l... 1, !dbg !2841\l  %54 = load i64, i64* %53, align 8, !dbg !2841\l  %55 = icmp sge i64 %52, %54, !dbg !2842\l  br i1 %55, label %56, label %65, !dbg !2843\l|{<s0>T|<s1>F}}"];
	Node0x5568512ee960:s0 -> Node0x5568512ee9b0;
	Node0x5568512ee960:s1 -> Node0x5568512eea00;
	Node0x5568512ee9b0 [shape=record,label="{%56:\l56:                                               \l  %57 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %3, i32 0, i32\l... 1, !dbg !2844\l  %58 = load i64, i64* %57, align 8, !dbg !2844\l  %59 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %2, i32 0, i32\l... 1, !dbg !2846\l  %60 = load i64, i64* %59, align 8, !dbg !2846\l  %61 = sub nsw i64 %58, %60, !dbg !2847\l  %62 = sdiv i64 %61, 1000000, !dbg !2848\l  %63 = load i64, i64* %4, align 8, !dbg !2849\l  %64 = add i64 %63, %62, !dbg !2849\l  store i64 %64, i64* %4, align 8, !dbg !2849\l  br label %74, !dbg !2850\l}"];
	Node0x5568512ee9b0 -> Node0x5568512eea50;
	Node0x5568512eea00 [shape=record,label="{%65:\l65:                                               \l  %66 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %2, i32 0, i32\l... 1, !dbg !2851\l  %67 = load i64, i64* %66, align 8, !dbg !2851\l  %68 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %3, i32 0, i32\l... 1, !dbg !2853\l  %69 = load i64, i64* %68, align 8, !dbg !2853\l  %70 = sub nsw i64 %67, %69, !dbg !2854\l  %71 = sdiv i64 %70, 1000000, !dbg !2855\l  %72 = load i64, i64* %4, align 8, !dbg !2856\l  %73 = sub i64 %72, %71, !dbg !2856\l  store i64 %73, i64* %4, align 8, !dbg !2856\l  br label %74\l}"];
	Node0x5568512eea00 -> Node0x5568512eea50;
	Node0x5568512eea50 [shape=record,label="{%74:\l74:                                               \l  %75 = load i64, i64* %4, align 8, !dbg !2857\l  %76 = icmp ugt i64 %75, 1000, !dbg !2859\l  br i1 %76, label %77, label %78, !dbg !2860\l|{<s0>T|<s1>F}}"];
	Node0x5568512eea50:s0 -> Node0x5568512eeaa0;
	Node0x5568512eea50:s1 -> Node0x5568512eeaf0;
	Node0x5568512eeaa0 [shape=record,label="{%77:\l77:                                               \l  store i64 1000, i64* %4, align 8, !dbg !2861\l  br label %78, !dbg !2862\l}"];
	Node0x5568512eeaa0 -> Node0x5568512eeaf0;
	Node0x5568512eeaf0 [shape=record,label="{%78:\l78:                                               \l  %79 = load i64, i64* %4, align 8, !dbg !2863\l  store i64 %79, i64* %1, align 8, !dbg !2864\l  br label %80, !dbg !2864\l}"];
	Node0x5568512eeaf0 -> Node0x5568512eeb40;
	Node0x5568512eeb40 [shape=record,label="{%80:\l80:                                               \l  %81 = load i64, i64* %1, align 8, !dbg !2865\l  ret i64 %81, !dbg !2865\l}"];
}
