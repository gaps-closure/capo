digraph "CFG for 'fio_json_unescape_str_internal' function" {
	label="CFG for 'fio_json_unescape_str_internal' function";

	Node0x55685173c390 [shape=record,label="{%2:\l  %3 = alloca i8**, align 8\l  %4 = alloca i8**, align 8\l  %5 = alloca i32, align 4\l  store i8** %0, i8*** %3, align 8\l  call void @llvm.dbg.declare(metadata i8*** %3, metadata !2805, metadata\l... !DIExpression()), !dbg !2806\l  store i8** %1, i8*** %4, align 8\l  call void @llvm.dbg.declare(metadata i8*** %4, metadata !2807, metadata\l... !DIExpression()), !dbg !2808\l  %6 = load i8**, i8*** %4, align 8, !dbg !2809\l  %7 = load i8*, i8** %6, align 8, !dbg !2810\l  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !2810\l  store i8* %8, i8** %6, align 8, !dbg !2810\l  %9 = load i8**, i8*** %4, align 8, !dbg !2811\l  %10 = load i8*, i8** %9, align 8, !dbg !2812\l  %11 = load i8, i8* %10, align 1, !dbg !2813\l  %12 = zext i8 %11 to i32, !dbg !2813\l  switch i32 %12, label %352 [\l    i32 98, label %13\l    i32 102, label %22\l    i32 110, label %31\l    i32 114, label %40\l    i32 116, label %49\l    i32 117, label %58\l    i32 120, label %261\l    i32 48, label %312\l    i32 49, label %312\l    i32 50, label %312\l    i32 51, label %312\l    i32 52, label %312\l    i32 53, label %312\l    i32 54, label %312\l    i32 55, label %312\l    i32 34, label %351\l    i32 92, label %351\l    i32 47, label %351\l  ], !dbg !2814\l|{<s0>def|<s1>98|<s2>102|<s3>110|<s4>114|<s5>116|<s6>117|<s7>120|<s8>48|<s9>49|<s10>50|<s11>51|<s12>52|<s13>53|<s14>54|<s15>55|<s16>34|<s17>92|<s18>47}}"];
	Node0x55685173c390:s0 -> Node0x556851f04650;
	Node0x55685173c390:s1 -> Node0x556851f03de0;
	Node0x55685173c390:s2 -> Node0x556851f03e30;
	Node0x55685173c390:s3 -> Node0x556851f03e80;
	Node0x55685173c390:s4 -> Node0x556851f03ed0;
	Node0x55685173c390:s5 -> Node0x556851f03f20;
	Node0x55685173c390:s6 -> Node0x556851f03f70;
	Node0x55685173c390:s7 -> Node0x556851f04380;
	Node0x55685173c390:s8 -> Node0x556851f044c0;
	Node0x55685173c390:s9 -> Node0x556851f044c0;
	Node0x55685173c390:s10 -> Node0x556851f044c0;
	Node0x55685173c390:s11 -> Node0x556851f044c0;
	Node0x55685173c390:s12 -> Node0x556851f044c0;
	Node0x55685173c390:s13 -> Node0x556851f044c0;
	Node0x55685173c390:s14 -> Node0x556851f044c0;
	Node0x55685173c390:s15 -> Node0x556851f044c0;
	Node0x55685173c390:s16 -> Node0x556851f04600;
	Node0x55685173c390:s17 -> Node0x556851f04600;
	Node0x55685173c390:s18 -> Node0x556851f04600;
	Node0x556851f03de0 [shape=record,label="{%13:\l13:                                               \l  %14 = load i8**, i8*** %3, align 8, !dbg !2815\l  %15 = load i8*, i8** %14, align 8, !dbg !2817\l  store i8 8, i8* %15, align 1, !dbg !2818\l  %16 = load i8**, i8*** %4, align 8, !dbg !2819\l  %17 = load i8*, i8** %16, align 8, !dbg !2820\l  %18 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !2820\l  store i8* %18, i8** %16, align 8, !dbg !2820\l  %19 = load i8**, i8*** %3, align 8, !dbg !2821\l  %20 = load i8*, i8** %19, align 8, !dbg !2822\l  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !2822\l  store i8* %21, i8** %19, align 8, !dbg !2822\l  br label %365, !dbg !2823\l}"];
	Node0x556851f03de0 -> Node0x556851f046f0;
	Node0x556851f03e30 [shape=record,label="{%22:\l22:                                               \l  %23 = load i8**, i8*** %3, align 8, !dbg !2824\l  %24 = load i8*, i8** %23, align 8, !dbg !2825\l  store i8 12, i8* %24, align 1, !dbg !2826\l  %25 = load i8**, i8*** %4, align 8, !dbg !2827\l  %26 = load i8*, i8** %25, align 8, !dbg !2828\l  %27 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !2828\l  store i8* %27, i8** %25, align 8, !dbg !2828\l  %28 = load i8**, i8*** %3, align 8, !dbg !2829\l  %29 = load i8*, i8** %28, align 8, !dbg !2830\l  %30 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !2830\l  store i8* %30, i8** %28, align 8, !dbg !2830\l  br label %365, !dbg !2831\l}"];
	Node0x556851f03e30 -> Node0x556851f046f0;
	Node0x556851f03e80 [shape=record,label="{%31:\l31:                                               \l  %32 = load i8**, i8*** %3, align 8, !dbg !2832\l  %33 = load i8*, i8** %32, align 8, !dbg !2833\l  store i8 10, i8* %33, align 1, !dbg !2834\l  %34 = load i8**, i8*** %4, align 8, !dbg !2835\l  %35 = load i8*, i8** %34, align 8, !dbg !2836\l  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !2836\l  store i8* %36, i8** %34, align 8, !dbg !2836\l  %37 = load i8**, i8*** %3, align 8, !dbg !2837\l  %38 = load i8*, i8** %37, align 8, !dbg !2838\l  %39 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !2838\l  store i8* %39, i8** %37, align 8, !dbg !2838\l  br label %365, !dbg !2839\l}"];
	Node0x556851f03e80 -> Node0x556851f046f0;
	Node0x556851f03ed0 [shape=record,label="{%40:\l40:                                               \l  %41 = load i8**, i8*** %3, align 8, !dbg !2840\l  %42 = load i8*, i8** %41, align 8, !dbg !2841\l  store i8 13, i8* %42, align 1, !dbg !2842\l  %43 = load i8**, i8*** %4, align 8, !dbg !2843\l  %44 = load i8*, i8** %43, align 8, !dbg !2844\l  %45 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !2844\l  store i8* %45, i8** %43, align 8, !dbg !2844\l  %46 = load i8**, i8*** %3, align 8, !dbg !2845\l  %47 = load i8*, i8** %46, align 8, !dbg !2846\l  %48 = getelementptr inbounds i8, i8* %47, i32 1, !dbg !2846\l  store i8* %48, i8** %46, align 8, !dbg !2846\l  br label %365, !dbg !2847\l}"];
	Node0x556851f03ed0 -> Node0x556851f046f0;
	Node0x556851f03f20 [shape=record,label="{%49:\l49:                                               \l  %50 = load i8**, i8*** %3, align 8, !dbg !2848\l  %51 = load i8*, i8** %50, align 8, !dbg !2849\l  store i8 9, i8* %51, align 1, !dbg !2850\l  %52 = load i8**, i8*** %4, align 8, !dbg !2851\l  %53 = load i8*, i8** %52, align 8, !dbg !2852\l  %54 = getelementptr inbounds i8, i8* %53, i32 1, !dbg !2852\l  store i8* %54, i8** %52, align 8, !dbg !2852\l  %55 = load i8**, i8*** %3, align 8, !dbg !2853\l  %56 = load i8*, i8** %55, align 8, !dbg !2854\l  %57 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !2854\l  store i8* %57, i8** %55, align 8, !dbg !2854\l  br label %365, !dbg !2855\l}"];
	Node0x556851f03f20 -> Node0x556851f046f0;
	Node0x556851f03f70 [shape=record,label="{%58:\l58:                                               \l  %59 = load i8**, i8*** %4, align 8, !dbg !2856\l  %60 = load i8*, i8** %59, align 8, !dbg !2859\l  %61 = getelementptr inbounds i8, i8* %60, i64 1, !dbg !2860\l  %62 = load i8, i8* %61, align 1, !dbg !2860\l  %63 = zext i8 %62 to i64, !dbg !2861\l  %64 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x i8],\l... [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %63, !dbg !2861\l  %65 = load i8, i8* %64, align 1, !dbg !2861\l  %66 = zext i8 %65 to i32, !dbg !2861\l  %67 = icmp ne i32 %66, 0, !dbg !2861\l  br i1 %67, label %68, label %260, !dbg !2862\l|{<s0>T|<s1>F}}"];
	Node0x556851f03f70:s0 -> Node0x556851f03fc0;
	Node0x556851f03f70:s1 -> Node0x556851f04330;
	Node0x556851f03fc0 [shape=record,label="{%68:\l68:                                               \l  %69 = load i8**, i8*** %4, align 8, !dbg !2863\l  %70 = load i8*, i8** %69, align 8, !dbg !2864\l  %71 = getelementptr inbounds i8, i8* %70, i64 2, !dbg !2865\l  %72 = load i8, i8* %71, align 1, !dbg !2865\l  %73 = zext i8 %72 to i64, !dbg !2866\l  %74 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x i8],\l... [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %73, !dbg !2866\l  %75 = load i8, i8* %74, align 1, !dbg !2866\l  %76 = zext i8 %75 to i32, !dbg !2866\l  %77 = icmp ne i32 %76, 0, !dbg !2866\l  br i1 %77, label %78, label %260, !dbg !2867\l|{<s0>T|<s1>F}}"];
	Node0x556851f03fc0:s0 -> Node0x556851f04010;
	Node0x556851f03fc0:s1 -> Node0x556851f04330;
	Node0x556851f04010 [shape=record,label="{%78:\l78:                                               \l  %79 = load i8**, i8*** %4, align 8, !dbg !2868\l  %80 = load i8*, i8** %79, align 8, !dbg !2869\l  %81 = getelementptr inbounds i8, i8* %80, i64 3, !dbg !2870\l  %82 = load i8, i8* %81, align 1, !dbg !2870\l  %83 = zext i8 %82 to i64, !dbg !2871\l  %84 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x i8],\l... [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %83, !dbg !2871\l  %85 = load i8, i8* %84, align 1, !dbg !2871\l  %86 = zext i8 %85 to i32, !dbg !2871\l  %87 = icmp ne i32 %86, 0, !dbg !2871\l  br i1 %87, label %88, label %260, !dbg !2872\l|{<s0>T|<s1>F}}"];
	Node0x556851f04010:s0 -> Node0x556851f04060;
	Node0x556851f04010:s1 -> Node0x556851f04330;
	Node0x556851f04060 [shape=record,label="{%88:\l88:                                               \l  %89 = load i8**, i8*** %4, align 8, !dbg !2873\l  %90 = load i8*, i8** %89, align 8, !dbg !2874\l  %91 = getelementptr inbounds i8, i8* %90, i64 4, !dbg !2875\l  %92 = load i8, i8* %91, align 1, !dbg !2875\l  %93 = zext i8 %92 to i64, !dbg !2876\l  %94 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x i8],\l... [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %93, !dbg !2876\l  %95 = load i8, i8* %94, align 1, !dbg !2876\l  %96 = zext i8 %95 to i32, !dbg !2876\l  %97 = icmp ne i32 %96, 0, !dbg !2876\l  br i1 %97, label %98, label %260, !dbg !2877\l|{<s0>T|<s1>F}}"];
	Node0x556851f04060:s0 -> Node0x556851f040b0;
	Node0x556851f04060:s1 -> Node0x556851f04330;
	Node0x556851f040b0 [shape=record,label="{%98:\l98:                                               \l  call void @llvm.dbg.declare(metadata i32* %5, metadata !2878, metadata\l... !DIExpression()), !dbg !2880\l  %99 = load i8**, i8*** %4, align 8, !dbg !2881\l  %100 = load i8*, i8** %99, align 8, !dbg !2882\l  %101 = getelementptr inbounds i8, i8* %100, i64 1, !dbg !2883\l  %102 = load i8, i8* %101, align 1, !dbg !2883\l  %103 = zext i8 %102 to i64, !dbg !2884\l  %104 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x\l... i8], [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %103, !dbg !2884\l  %105 = load i8, i8* %104, align 1, !dbg !2884\l  %106 = zext i8 %105 to i32, !dbg !2884\l  %107 = sub nsw i32 %106, 1, !dbg !2885\l  %108 = shl i32 %107, 4, !dbg !2886\l  %109 = load i8**, i8*** %4, align 8, !dbg !2887\l  %110 = load i8*, i8** %109, align 8, !dbg !2888\l  %111 = getelementptr inbounds i8, i8* %110, i64 2, !dbg !2889\l  %112 = load i8, i8* %111, align 1, !dbg !2889\l  %113 = zext i8 %112 to i64, !dbg !2890\l  %114 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x\l... i8], [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %113, !dbg !2890\l  %115 = load i8, i8* %114, align 1, !dbg !2890\l  %116 = zext i8 %115 to i32, !dbg !2890\l  %117 = sub nsw i32 %116, 1, !dbg !2891\l  %118 = or i32 %108, %117, !dbg !2892\l  %119 = shl i32 %118, 8, !dbg !2893\l  %120 = load i8**, i8*** %4, align 8, !dbg !2894\l  %121 = load i8*, i8** %120, align 8, !dbg !2895\l  %122 = getelementptr inbounds i8, i8* %121, i64 3, !dbg !2896\l  %123 = load i8, i8* %122, align 1, !dbg !2896\l  %124 = zext i8 %123 to i64, !dbg !2897\l  %125 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x\l... i8], [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %124, !dbg !2897\l  %126 = load i8, i8* %125, align 1, !dbg !2897\l  %127 = zext i8 %126 to i32, !dbg !2897\l  %128 = sub nsw i32 %127, 1, !dbg !2898\l  %129 = shl i32 %128, 4, !dbg !2899\l  %130 = load i8**, i8*** %4, align 8, !dbg !2900\l  %131 = load i8*, i8** %130, align 8, !dbg !2901\l  %132 = getelementptr inbounds i8, i8* %131, i64 4, !dbg !2902\l  %133 = load i8, i8* %132, align 1, !dbg !2902\l  %134 = zext i8 %133 to i64, !dbg !2903\l  %135 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x\l... i8], [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %134, !dbg !2903\l  %136 = load i8, i8* %135, align 1, !dbg !2903\l  %137 = zext i8 %136 to i32, !dbg !2903\l  %138 = sub nsw i32 %137, 1, !dbg !2904\l  %139 = or i32 %129, %138, !dbg !2905\l  %140 = or i32 %119, %139, !dbg !2906\l  store i32 %140, i32* %5, align 4, !dbg !2880\l  %141 = load i8**, i8*** %4, align 8, !dbg !2907\l  %142 = load i8*, i8** %141, align 8, !dbg !2909\l  %143 = getelementptr inbounds i8, i8* %142, i64 5, !dbg !2910\l  %144 = load i8, i8* %143, align 1, !dbg !2910\l  %145 = zext i8 %144 to i32, !dbg !2910\l  %146 = icmp eq i32 %145, 92, !dbg !2911\l  br i1 %146, label %147, label %248, !dbg !2912\l|{<s0>T|<s1>F}}"];
	Node0x556851f040b0:s0 -> Node0x556851f04100;
	Node0x556851f040b0:s1 -> Node0x556851f042e0;
	Node0x556851f04100 [shape=record,label="{%147:\l147:                                              \l  %148 = load i8**, i8*** %4, align 8, !dbg !2913\l  %149 = load i8*, i8** %148, align 8, !dbg !2914\l  %150 = getelementptr inbounds i8, i8* %149, i64 6, !dbg !2915\l  %151 = load i8, i8* %150, align 1, !dbg !2915\l  %152 = zext i8 %151 to i32, !dbg !2915\l  %153 = icmp eq i32 %152, 117, !dbg !2916\l  br i1 %153, label %154, label %248, !dbg !2917\l|{<s0>T|<s1>F}}"];
	Node0x556851f04100:s0 -> Node0x556851f04150;
	Node0x556851f04100:s1 -> Node0x556851f042e0;
	Node0x556851f04150 [shape=record,label="{%154:\l154:                                              \l  %155 = load i8**, i8*** %4, align 8, !dbg !2918\l  %156 = load i8*, i8** %155, align 8, !dbg !2919\l  %157 = getelementptr inbounds i8, i8* %156, i64 7, !dbg !2920\l  %158 = load i8, i8* %157, align 1, !dbg !2920\l  %159 = zext i8 %158 to i64, !dbg !2921\l  %160 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x\l... i8], [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %159, !dbg !2921\l  %161 = load i8, i8* %160, align 1, !dbg !2921\l  %162 = zext i8 %161 to i32, !dbg !2921\l  %163 = icmp ne i32 %162, 0, !dbg !2921\l  br i1 %163, label %164, label %248, !dbg !2922\l|{<s0>T|<s1>F}}"];
	Node0x556851f04150:s0 -> Node0x556851f041a0;
	Node0x556851f04150:s1 -> Node0x556851f042e0;
	Node0x556851f041a0 [shape=record,label="{%164:\l164:                                              \l  %165 = load i8**, i8*** %4, align 8, !dbg !2923\l  %166 = load i8*, i8** %165, align 8, !dbg !2924\l  %167 = getelementptr inbounds i8, i8* %166, i64 8, !dbg !2925\l  %168 = load i8, i8* %167, align 1, !dbg !2925\l  %169 = zext i8 %168 to i64, !dbg !2926\l  %170 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x\l... i8], [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %169, !dbg !2926\l  %171 = load i8, i8* %170, align 1, !dbg !2926\l  %172 = zext i8 %171 to i32, !dbg !2926\l  %173 = icmp ne i32 %172, 0, !dbg !2926\l  br i1 %173, label %174, label %248, !dbg !2927\l|{<s0>T|<s1>F}}"];
	Node0x556851f041a0:s0 -> Node0x556851f041f0;
	Node0x556851f041a0:s1 -> Node0x556851f042e0;
	Node0x556851f041f0 [shape=record,label="{%174:\l174:                                              \l  %175 = load i8**, i8*** %4, align 8, !dbg !2928\l  %176 = load i8*, i8** %175, align 8, !dbg !2929\l  %177 = getelementptr inbounds i8, i8* %176, i64 9, !dbg !2930\l  %178 = load i8, i8* %177, align 1, !dbg !2930\l  %179 = zext i8 %178 to i64, !dbg !2931\l  %180 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x\l... i8], [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %179, !dbg !2931\l  %181 = load i8, i8* %180, align 1, !dbg !2931\l  %182 = zext i8 %181 to i32, !dbg !2931\l  %183 = icmp ne i32 %182, 0, !dbg !2931\l  br i1 %183, label %184, label %248, !dbg !2932\l|{<s0>T|<s1>F}}"];
	Node0x556851f041f0:s0 -> Node0x556851f04240;
	Node0x556851f041f0:s1 -> Node0x556851f042e0;
	Node0x556851f04240 [shape=record,label="{%184:\l184:                                              \l  %185 = load i8**, i8*** %4, align 8, !dbg !2933\l  %186 = load i8*, i8** %185, align 8, !dbg !2934\l  %187 = getelementptr inbounds i8, i8* %186, i64 10, !dbg !2935\l  %188 = load i8, i8* %187, align 1, !dbg !2935\l  %189 = zext i8 %188 to i64, !dbg !2936\l  %190 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x\l... i8], [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %189, !dbg !2936\l  %191 = load i8, i8* %190, align 1, !dbg !2936\l  %192 = zext i8 %191 to i32, !dbg !2936\l  %193 = icmp ne i32 %192, 0, !dbg !2936\l  br i1 %193, label %194, label %248, !dbg !2937\l|{<s0>T|<s1>F}}"];
	Node0x556851f04240:s0 -> Node0x556851f04290;
	Node0x556851f04240:s1 -> Node0x556851f042e0;
	Node0x556851f04290 [shape=record,label="{%194:\l194:                                              \l  %195 = load i32, i32* %5, align 4, !dbg !2938\l  %196 = and i32 %195, 1023, !dbg !2940\l  %197 = shl i32 %196, 10, !dbg !2941\l  store i32 %197, i32* %5, align 4, !dbg !2942\l  %198 = load i8**, i8*** %4, align 8, !dbg !2943\l  %199 = load i8*, i8** %198, align 8, !dbg !2944\l  %200 = getelementptr inbounds i8, i8* %199, i64 7, !dbg !2945\l  %201 = load i8, i8* %200, align 1, !dbg !2945\l  %202 = zext i8 %201 to i64, !dbg !2946\l  %203 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x\l... i8], [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %202, !dbg !2946\l  %204 = load i8, i8* %203, align 1, !dbg !2946\l  %205 = zext i8 %204 to i32, !dbg !2946\l  %206 = sub nsw i32 %205, 1, !dbg !2947\l  %207 = shl i32 %206, 4, !dbg !2948\l  %208 = load i8**, i8*** %4, align 8, !dbg !2949\l  %209 = load i8*, i8** %208, align 8, !dbg !2950\l  %210 = getelementptr inbounds i8, i8* %209, i64 8, !dbg !2951\l  %211 = load i8, i8* %210, align 1, !dbg !2951\l  %212 = zext i8 %211 to i64, !dbg !2952\l  %213 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x\l... i8], [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %212, !dbg !2952\l  %214 = load i8, i8* %213, align 1, !dbg !2952\l  %215 = zext i8 %214 to i32, !dbg !2952\l  %216 = sub nsw i32 %215, 1, !dbg !2953\l  %217 = or i32 %207, %216, !dbg !2954\l  %218 = shl i32 %217, 8, !dbg !2955\l  %219 = load i8**, i8*** %4, align 8, !dbg !2956\l  %220 = load i8*, i8** %219, align 8, !dbg !2957\l  %221 = getelementptr inbounds i8, i8* %220, i64 9, !dbg !2958\l  %222 = load i8, i8* %221, align 1, !dbg !2958\l  %223 = zext i8 %222 to i64, !dbg !2959\l  %224 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x\l... i8], [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %223, !dbg !2959\l  %225 = load i8, i8* %224, align 1, !dbg !2959\l  %226 = zext i8 %225 to i32, !dbg !2959\l  %227 = sub nsw i32 %226, 1, !dbg !2960\l  %228 = shl i32 %227, 4, !dbg !2961\l  %229 = load i8**, i8*** %4, align 8, !dbg !2962\l  %230 = load i8*, i8** %229, align 8, !dbg !2963\l  %231 = getelementptr inbounds i8, i8* %230, i64 10, !dbg !2964\l  %232 = load i8, i8* %231, align 1, !dbg !2964\l  %233 = zext i8 %232 to i64, !dbg !2965\l  %234 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x\l... i8], [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %233, !dbg !2965\l  %235 = load i8, i8* %234, align 1, !dbg !2965\l  %236 = zext i8 %235 to i32, !dbg !2965\l  %237 = sub nsw i32 %236, 1, !dbg !2966\l  %238 = or i32 %228, %237, !dbg !2967\l  %239 = or i32 %218, %238, !dbg !2968\l  %240 = and i32 %239, 1023, !dbg !2969\l  %241 = load i32, i32* %5, align 4, !dbg !2970\l  %242 = or i32 %241, %240, !dbg !2970\l  store i32 %242, i32* %5, align 4, !dbg !2970\l  %243 = load i32, i32* %5, align 4, !dbg !2971\l  %244 = add i32 %243, 65536, !dbg !2971\l  store i32 %244, i32* %5, align 4, !dbg !2971\l  %245 = load i8**, i8*** %4, align 8, !dbg !2972\l  %246 = load i8*, i8** %245, align 8, !dbg !2973\l  %247 = getelementptr inbounds i8, i8* %246, i64 6, !dbg !2973\l  store i8* %247, i8** %245, align 8, !dbg !2973\l  br label %248, !dbg !2974\l}"];
	Node0x556851f04290 -> Node0x556851f042e0;
	Node0x556851f042e0 [shape=record,label="{%248:\l248:                                              \l  %249 = load i8**, i8*** %3, align 8, !dbg !2975\l  %250 = load i8*, i8** %249, align 8, !dbg !2976\l  %251 = load i32, i32* %5, align 4, !dbg !2977\l  %252 = call i32 @utf8_from_u32(i8* %250, i32 %251), !dbg !2978\l  %253 = load i8**, i8*** %3, align 8, !dbg !2979\l  %254 = load i8*, i8** %253, align 8, !dbg !2980\l  %255 = sext i32 %252 to i64, !dbg !2980\l  %256 = getelementptr inbounds i8, i8* %254, i64 %255, !dbg !2980\l  store i8* %256, i8** %253, align 8, !dbg !2980\l  %257 = load i8**, i8*** %4, align 8, !dbg !2981\l  %258 = load i8*, i8** %257, align 8, !dbg !2982\l  %259 = getelementptr inbounds i8, i8* %258, i64 5, !dbg !2982\l  store i8* %259, i8** %257, align 8, !dbg !2982\l  br label %365, !dbg !2983\l}"];
	Node0x556851f042e0 -> Node0x556851f046f0;
	Node0x556851f04330 [shape=record,label="{%260:\l260:                                              \l  br label %353, !dbg !2984\l}"];
	Node0x556851f04330 -> Node0x556851f046a0;
	Node0x556851f04380 [shape=record,label="{%261:\l261:                                              \l  %262 = load i8**, i8*** %4, align 8, !dbg !2985\l  %263 = load i8*, i8** %262, align 8, !dbg !2988\l  %264 = getelementptr inbounds i8, i8* %263, i64 1, !dbg !2989\l  %265 = load i8, i8* %264, align 1, !dbg !2989\l  %266 = zext i8 %265 to i64, !dbg !2990\l  %267 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x\l... i8], [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %266, !dbg !2990\l  %268 = load i8, i8* %267, align 1, !dbg !2990\l  %269 = zext i8 %268 to i32, !dbg !2990\l  %270 = icmp ne i32 %269, 0, !dbg !2990\l  br i1 %270, label %271, label %311, !dbg !2991\l|{<s0>T|<s1>F}}"];
	Node0x556851f04380:s0 -> Node0x556851f043d0;
	Node0x556851f04380:s1 -> Node0x556851f04470;
	Node0x556851f043d0 [shape=record,label="{%271:\l271:                                              \l  %272 = load i8**, i8*** %4, align 8, !dbg !2992\l  %273 = load i8*, i8** %272, align 8, !dbg !2993\l  %274 = getelementptr inbounds i8, i8* %273, i64 2, !dbg !2994\l  %275 = load i8, i8* %274, align 1, !dbg !2994\l  %276 = zext i8 %275 to i64, !dbg !2995\l  %277 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x\l... i8], [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %276, !dbg !2995\l  %278 = load i8, i8* %277, align 1, !dbg !2995\l  %279 = zext i8 %278 to i32, !dbg !2995\l  %280 = icmp ne i32 %279, 0, !dbg !2995\l  br i1 %280, label %281, label %311, !dbg !2996\l|{<s0>T|<s1>F}}"];
	Node0x556851f043d0:s0 -> Node0x556851f04420;
	Node0x556851f043d0:s1 -> Node0x556851f04470;
	Node0x556851f04420 [shape=record,label="{%281:\l281:                                              \l  %282 = load i8**, i8*** %4, align 8, !dbg !2997\l  %283 = load i8*, i8** %282, align 8, !dbg !2999\l  %284 = getelementptr inbounds i8, i8* %283, i64 1, !dbg !3000\l  %285 = load i8, i8* %284, align 1, !dbg !3000\l  %286 = zext i8 %285 to i64, !dbg !3001\l  %287 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x\l... i8], [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %286, !dbg !3001\l  %288 = load i8, i8* %287, align 1, !dbg !3001\l  %289 = zext i8 %288 to i32, !dbg !3001\l  %290 = sub nsw i32 %289, 1, !dbg !3002\l  %291 = shl i32 %290, 4, !dbg !3003\l  %292 = load i8**, i8*** %4, align 8, !dbg !3004\l  %293 = load i8*, i8** %292, align 8, !dbg !3005\l  %294 = getelementptr inbounds i8, i8* %293, i64 2, !dbg !3006\l  %295 = load i8, i8* %294, align 1, !dbg !3006\l  %296 = zext i8 %295 to i64, !dbg !3007\l  %297 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (\<\{ [103 x\l... i8], [153 x i8] \}\>* @is_hex to [256 x i8]*), i64 0, i64 %296, !dbg !3007\l  %298 = load i8, i8* %297, align 1, !dbg !3007\l  %299 = zext i8 %298 to i32, !dbg !3007\l  %300 = sub nsw i32 %299, 1, !dbg !3008\l  %301 = or i32 %291, %300, !dbg !3009\l  %302 = trunc i32 %301 to i8, !dbg !3010\l  %303 = load i8**, i8*** %3, align 8, !dbg !3011\l  %304 = load i8*, i8** %303, align 8, !dbg !3012\l  store i8 %302, i8* %304, align 1, !dbg !3013\l  %305 = load i8**, i8*** %3, align 8, !dbg !3014\l  %306 = load i8*, i8** %305, align 8, !dbg !3015\l  %307 = getelementptr inbounds i8, i8* %306, i32 1, !dbg !3015\l  store i8* %307, i8** %305, align 8, !dbg !3015\l  %308 = load i8**, i8*** %4, align 8, !dbg !3016\l  %309 = load i8*, i8** %308, align 8, !dbg !3017\l  %310 = getelementptr inbounds i8, i8* %309, i64 3, !dbg !3017\l  store i8* %310, i8** %308, align 8, !dbg !3017\l  br label %365, !dbg !3018\l}"];
	Node0x556851f04420 -> Node0x556851f046f0;
	Node0x556851f04470 [shape=record,label="{%311:\l311:                                              \l  br label %353, !dbg !3019\l}"];
	Node0x556851f04470 -> Node0x556851f046a0;
	Node0x556851f044c0 [shape=record,label="{%312:\l312:                                              \l  %313 = load i8**, i8*** %4, align 8, !dbg !3020\l  %314 = load i8*, i8** %313, align 8, !dbg !3023\l  %315 = getelementptr inbounds i8, i8* %314, i64 1, !dbg !3024\l  %316 = load i8, i8* %315, align 1, !dbg !3024\l  %317 = zext i8 %316 to i32, !dbg !3024\l  %318 = icmp sge i32 %317, 48, !dbg !3025\l  br i1 %318, label %319, label %350, !dbg !3026\l|{<s0>T|<s1>F}}"];
	Node0x556851f044c0:s0 -> Node0x556851f04510;
	Node0x556851f044c0:s1 -> Node0x556851f045b0;
	Node0x556851f04510 [shape=record,label="{%319:\l319:                                              \l  %320 = load i8**, i8*** %4, align 8, !dbg !3027\l  %321 = load i8*, i8** %320, align 8, !dbg !3028\l  %322 = getelementptr inbounds i8, i8* %321, i64 1, !dbg !3029\l  %323 = load i8, i8* %322, align 1, !dbg !3029\l  %324 = zext i8 %323 to i32, !dbg !3029\l  %325 = icmp sle i32 %324, 55, !dbg !3030\l  br i1 %325, label %326, label %350, !dbg !3031\l|{<s0>T|<s1>F}}"];
	Node0x556851f04510:s0 -> Node0x556851f04560;
	Node0x556851f04510:s1 -> Node0x556851f045b0;
	Node0x556851f04560 [shape=record,label="{%326:\l326:                                              \l  %327 = load i8**, i8*** %4, align 8, !dbg !3032\l  %328 = load i8*, i8** %327, align 8, !dbg !3034\l  %329 = getelementptr inbounds i8, i8* %328, i64 0, !dbg !3035\l  %330 = load i8, i8* %329, align 1, !dbg !3035\l  %331 = zext i8 %330 to i32, !dbg !3035\l  %332 = sub nsw i32 %331, 48, !dbg !3036\l  %333 = shl i32 %332, 3, !dbg !3037\l  %334 = load i8**, i8*** %4, align 8, !dbg !3038\l  %335 = load i8*, i8** %334, align 8, !dbg !3039\l  %336 = getelementptr inbounds i8, i8* %335, i64 1, !dbg !3040\l  %337 = load i8, i8* %336, align 1, !dbg !3040\l  %338 = zext i8 %337 to i32, !dbg !3040\l  %339 = sub nsw i32 %338, 48, !dbg !3041\l  %340 = or i32 %333, %339, !dbg !3042\l  %341 = trunc i32 %340 to i8, !dbg !3043\l  %342 = load i8**, i8*** %3, align 8, !dbg !3044\l  %343 = load i8*, i8** %342, align 8, !dbg !3045\l  store i8 %341, i8* %343, align 1, !dbg !3046\l  %344 = load i8**, i8*** %3, align 8, !dbg !3047\l  %345 = load i8*, i8** %344, align 8, !dbg !3048\l  %346 = getelementptr inbounds i8, i8* %345, i32 1, !dbg !3048\l  store i8* %346, i8** %344, align 8, !dbg !3048\l  %347 = load i8**, i8*** %4, align 8, !dbg !3049\l  %348 = load i8*, i8** %347, align 8, !dbg !3050\l  %349 = getelementptr inbounds i8, i8* %348, i64 2, !dbg !3050\l  store i8* %349, i8** %347, align 8, !dbg !3050\l  br label %365, !dbg !3051\l}"];
	Node0x556851f04560 -> Node0x556851f046f0;
	Node0x556851f045b0 [shape=record,label="{%350:\l350:                                              \l  br label %353, !dbg !3052\l}"];
	Node0x556851f045b0 -> Node0x556851f046a0;
	Node0x556851f04600 [shape=record,label="{%351:\l351:                                              \l  br label %352, !dbg !3053\l}"];
	Node0x556851f04600 -> Node0x556851f04650;
	Node0x556851f04650 [shape=record,label="{%352:\l352:                                              \l  br label %353, !dbg !3053\l}"];
	Node0x556851f04650 -> Node0x556851f046a0;
	Node0x556851f046a0 [shape=record,label="{%353:\l353:                                              \l  call void @llvm.dbg.label(metadata !3054), !dbg !3055\l  %354 = load i8**, i8*** %4, align 8, !dbg !3056\l  %355 = load i8*, i8** %354, align 8, !dbg !3057\l  %356 = load i8, i8* %355, align 1, !dbg !3058\l  %357 = load i8**, i8*** %3, align 8, !dbg !3059\l  %358 = load i8*, i8** %357, align 8, !dbg !3060\l  store i8 %356, i8* %358, align 1, !dbg !3061\l  %359 = load i8**, i8*** %4, align 8, !dbg !3062\l  %360 = load i8*, i8** %359, align 8, !dbg !3063\l  %361 = getelementptr inbounds i8, i8* %360, i32 1, !dbg !3063\l  store i8* %361, i8** %359, align 8, !dbg !3063\l  %362 = load i8**, i8*** %3, align 8, !dbg !3064\l  %363 = load i8*, i8** %362, align 8, !dbg !3065\l  %364 = getelementptr inbounds i8, i8* %363, i32 1, !dbg !3065\l  store i8* %364, i8** %362, align 8, !dbg !3065\l  br label %365, !dbg !3066\l}"];
	Node0x556851f046a0 -> Node0x556851f046f0;
	Node0x556851f046f0 [shape=record,label="{%365:\l365:                                              \l  ret void, !dbg !3067\l}"];
}
