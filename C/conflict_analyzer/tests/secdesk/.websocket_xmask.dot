digraph "CFG for 'websocket_xmask' function" {
	label="CFG for 'websocket_xmask' function";

	Node0x5568525b6e60 [shape=record,label="{%3:\l  %4 = alloca i8*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  store i8* %0, i8** %4, align 8\l  call void @llvm.dbg.declare(metadata i8** %4, metadata !2805, metadata\l... !DIExpression()), !dbg !2806\l  store i64 %1, i64* %5, align 8\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !2807, metadata\l... !DIExpression()), !dbg !2808\l  store i32 %2, i32* %6, align 4\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !2809, metadata\l... !DIExpression()), !dbg !2810\l  %10 = load i64, i64* %5, align 8, !dbg !2811\l  %11 = icmp ugt i64 %10, 7, !dbg !2813\l  br i1 %11, label %12, label %133, !dbg !2814\l|{<s0>T|<s1>F}}"];
	Node0x5568525b6e60:s0 -> Node0x5568525b7a30;
	Node0x5568525b6e60:s1 -> Node0x5568525b7d50;
	Node0x5568525b7a30 [shape=record,label="{%12:\l12:                                               \l  call void @llvm.dbg.declare(metadata i64* %7, metadata !2815, metadata\l... !DIExpression()), !dbg !2819\l  %13 = load i8*, i8** %4, align 8, !dbg !2820\l  %14 = ptrtoint i8* %13 to i64, !dbg !2821\l  %15 = and i64 %14, 3, !dbg !2822\l  %16 = sub i64 4, %15, !dbg !2823\l  store i64 %16, i64* %7, align 8, !dbg !2819\l  %17 = load i64, i64* %7, align 8, !dbg !2824\l  switch i64 %17, label %93 [\l    i64 3, label %18\l    i64 2, label %29\l    i64 1, label %40\l  ], !dbg !2825\l|{<s0>def|<s1>3|<s2>2|<s3>1}}"];
	Node0x5568525b7a30:s0 -> Node0x5568525b7b70;
	Node0x5568525b7a30:s1 -> Node0x5568525b7a80;
	Node0x5568525b7a30:s2 -> Node0x5568525b7ad0;
	Node0x5568525b7a30:s3 -> Node0x5568525b7b20;
	Node0x5568525b7a80 [shape=record,label="{%18:\l18:                                               \l  %19 = bitcast i32* %6 to i8*, !dbg !2826\l  %20 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !2826\l  %21 = load i8, i8* %20, align 2, !dbg !2826\l  %22 = zext i8 %21 to i32, !dbg !2826\l  %23 = load i8*, i8** %4, align 8, !dbg !2828\l  %24 = getelementptr inbounds i8, i8* %23, i64 2, !dbg !2829\l  %25 = load i8, i8* %24, align 1, !dbg !2830\l  %26 = zext i8 %25 to i32, !dbg !2830\l  %27 = xor i32 %26, %22, !dbg !2830\l  %28 = trunc i32 %27 to i8, !dbg !2830\l  store i8 %28, i8* %24, align 1, !dbg !2830\l  br label %29, !dbg !2829\l}"];
	Node0x5568525b7a80 -> Node0x5568525b7ad0;
	Node0x5568525b7ad0 [shape=record,label="{%29:\l29:                                               \l  %30 = bitcast i32* %6 to i8*, !dbg !2831\l  %31 = getelementptr inbounds i8, i8* %30, i64 1, !dbg !2831\l  %32 = load i8, i8* %31, align 1, !dbg !2831\l  %33 = zext i8 %32 to i32, !dbg !2831\l  %34 = load i8*, i8** %4, align 8, !dbg !2832\l  %35 = getelementptr inbounds i8, i8* %34, i64 1, !dbg !2833\l  %36 = load i8, i8* %35, align 1, !dbg !2834\l  %37 = zext i8 %36 to i32, !dbg !2834\l  %38 = xor i32 %37, %33, !dbg !2834\l  %39 = trunc i32 %38 to i8, !dbg !2834\l  store i8 %39, i8* %35, align 1, !dbg !2834\l  br label %40, !dbg !2833\l}"];
	Node0x5568525b7ad0 -> Node0x5568525b7b20;
	Node0x5568525b7b20 [shape=record,label="{%40:\l40:                                               \l  %41 = bitcast i32* %6 to i8*, !dbg !2835\l  %42 = getelementptr inbounds i8, i8* %41, i64 0, !dbg !2835\l  %43 = load i8, i8* %42, align 4, !dbg !2835\l  %44 = zext i8 %43 to i32, !dbg !2835\l  %45 = load i8*, i8** %4, align 8, !dbg !2836\l  %46 = getelementptr inbounds i8, i8* %45, i64 0, !dbg !2837\l  %47 = load i8, i8* %46, align 1, !dbg !2838\l  %48 = zext i8 %47 to i32, !dbg !2838\l  %49 = xor i32 %48, %44, !dbg !2838\l  %50 = trunc i32 %49 to i8, !dbg !2838\l  store i8 %50, i8* %46, align 1, !dbg !2838\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !2839, metadata\l... !DIExpression()), !dbg !2840\l  %51 = load i32, i32* %6, align 4, !dbg !2841\l  %52 = zext i32 %51 to i64, !dbg !2841\l  %53 = load i32, i32* %6, align 4, !dbg !2842\l  %54 = zext i32 %53 to i64, !dbg !2843\l  %55 = shl i64 %54, 32, !dbg !2844\l  %56 = or i64 %52, %55, !dbg !2845\l  store i64 %56, i64* %8, align 8, !dbg !2840\l  %57 = bitcast i64* %8 to i8*, !dbg !2846\l  %58 = load i64, i64* %7, align 8, !dbg !2847\l  %59 = add i64 0, %58, !dbg !2848\l  %60 = getelementptr inbounds i8, i8* %57, i64 %59, !dbg !2846\l  %61 = load i8, i8* %60, align 1, !dbg !2846\l  %62 = bitcast i32* %6 to i8*, !dbg !2849\l  %63 = getelementptr inbounds i8, i8* %62, i64 0, !dbg !2849\l  store i8 %61, i8* %63, align 4, !dbg !2850\l  %64 = bitcast i64* %8 to i8*, !dbg !2851\l  %65 = load i64, i64* %7, align 8, !dbg !2852\l  %66 = add i64 1, %65, !dbg !2853\l  %67 = getelementptr inbounds i8, i8* %64, i64 %66, !dbg !2851\l  %68 = load i8, i8* %67, align 1, !dbg !2851\l  %69 = bitcast i32* %6 to i8*, !dbg !2854\l  %70 = getelementptr inbounds i8, i8* %69, i64 1, !dbg !2854\l  store i8 %68, i8* %70, align 1, !dbg !2855\l  %71 = bitcast i64* %8 to i8*, !dbg !2856\l  %72 = load i64, i64* %7, align 8, !dbg !2857\l  %73 = add i64 2, %72, !dbg !2858\l  %74 = getelementptr inbounds i8, i8* %71, i64 %73, !dbg !2856\l  %75 = load i8, i8* %74, align 1, !dbg !2856\l  %76 = bitcast i32* %6 to i8*, !dbg !2859\l  %77 = getelementptr inbounds i8, i8* %76, i64 2, !dbg !2859\l  store i8 %75, i8* %77, align 2, !dbg !2860\l  %78 = bitcast i64* %8 to i8*, !dbg !2861\l  %79 = load i64, i64* %7, align 8, !dbg !2862\l  %80 = add i64 3, %79, !dbg !2863\l  %81 = getelementptr inbounds i8, i8* %78, i64 %80, !dbg !2861\l  %82 = load i8, i8* %81, align 1, !dbg !2861\l  %83 = bitcast i32* %6 to i8*, !dbg !2864\l  %84 = getelementptr inbounds i8, i8* %83, i64 3, !dbg !2864\l  store i8 %82, i8* %84, align 1, !dbg !2865\l  %85 = load i8*, i8** %4, align 8, !dbg !2866\l  %86 = ptrtoint i8* %85 to i64, !dbg !2867\l  %87 = load i64, i64* %7, align 8, !dbg !2868\l  %88 = add i64 %86, %87, !dbg !2869\l  %89 = inttoptr i64 %88 to i8*, !dbg !2870\l  store i8* %89, i8** %4, align 8, !dbg !2871\l  %90 = load i64, i64* %7, align 8, !dbg !2872\l  %91 = load i64, i64* %5, align 8, !dbg !2873\l  %92 = sub i64 %91, %90, !dbg !2873\l  store i64 %92, i64* %5, align 8, !dbg !2873\l  br label %93, !dbg !2874\l}"];
	Node0x5568525b7b20 -> Node0x5568525b7b70;
	Node0x5568525b7b70 [shape=record,label="{%93:\l93:                                               \l  %94 = load i8*, i8** %4, align 8, !dbg !2875\l  %95 = ptrtoint i8* %94 to i64, !dbg !2877\l  %96 = and i64 %95, 7, !dbg !2878\l  %97 = icmp ne i64 %96, 0, !dbg !2878\l  br i1 %97, label %98, label %110, !dbg !2879\l|{<s0>T|<s1>F}}"];
	Node0x5568525b7b70:s0 -> Node0x5568525b7bc0;
	Node0x5568525b7b70:s1 -> Node0x5568525b7c10;
	Node0x5568525b7bc0 [shape=record,label="{%98:\l98:                                               \l  %99 = load i32, i32* %6, align 4, !dbg !2880\l  %100 = load i8*, i8** %4, align 8, !dbg !2882\l  %101 = bitcast i8* %100 to i32*, !dbg !2883\l  %102 = load i32, i32* %101, align 4, !dbg !2884\l  %103 = xor i32 %102, %99, !dbg !2884\l  store i32 %103, i32* %101, align 4, !dbg !2884\l  %104 = load i64, i64* %5, align 8, !dbg !2885\l  %105 = sub i64 %104, 4, !dbg !2885\l  store i64 %105, i64* %5, align 8, !dbg !2885\l  %106 = load i8*, i8** %4, align 8, !dbg !2886\l  %107 = ptrtoint i8* %106 to i64, !dbg !2887\l  %108 = add i64 %107, 4, !dbg !2888\l  %109 = inttoptr i64 %108 to i8*, !dbg !2889\l  store i8* %109, i8** %4, align 8, !dbg !2890\l  br label %110, !dbg !2891\l}"];
	Node0x5568525b7bc0 -> Node0x5568525b7c10;
	Node0x5568525b7c10 [shape=record,label="{%110:\l110:                                              \l  call void @llvm.dbg.declare(metadata i64* %9, metadata !2892, metadata\l... !DIExpression()), !dbg !2894\l  %111 = load i32, i32* %6, align 4, !dbg !2895\l  %112 = zext i32 %111 to i64, !dbg !2896\l  %113 = shl i64 %112, 32, !dbg !2897\l  %114 = load i32, i32* %6, align 4, !dbg !2898\l  %115 = zext i32 %114 to i64, !dbg !2898\l  %116 = or i64 %113, %115, !dbg !2899\l  store i64 %116, i64* %9, align 8, !dbg !2894\l  br label %117, !dbg !2900\l}"];
	Node0x5568525b7c10 -> Node0x5568525b7c60;
	Node0x5568525b7c60 [shape=record,label="{%117:\l117:                                              \l  %118 = load i64, i64* %5, align 8, !dbg !2901\l  %119 = icmp uge i64 %118, 8, !dbg !2902\l  br i1 %119, label %120, label %132, !dbg !2900\l|{<s0>T|<s1>F}}"];
	Node0x5568525b7c60:s0 -> Node0x5568525b7cb0;
	Node0x5568525b7c60:s1 -> Node0x5568525b7d00;
	Node0x5568525b7cb0 [shape=record,label="{%120:\l120:                                              \l  %121 = load i64, i64* %9, align 8, !dbg !2903\l  %122 = load i8*, i8** %4, align 8, !dbg !2905\l  %123 = bitcast i8* %122 to i64*, !dbg !2906\l  %124 = load i64, i64* %123, align 8, !dbg !2907\l  %125 = xor i64 %124, %121, !dbg !2907\l  store i64 %125, i64* %123, align 8, !dbg !2907\l  %126 = load i64, i64* %5, align 8, !dbg !2908\l  %127 = sub i64 %126, 8, !dbg !2908\l  store i64 %127, i64* %5, align 8, !dbg !2908\l  %128 = load i8*, i8** %4, align 8, !dbg !2909\l  %129 = ptrtoint i8* %128 to i64, !dbg !2910\l  %130 = add i64 %129, 8, !dbg !2911\l  %131 = inttoptr i64 %130 to i8*, !dbg !2912\l  store i8* %131, i8** %4, align 8, !dbg !2913\l  br label %117, !dbg !2900, !llvm.loop !2914\l}"];
	Node0x5568525b7cb0 -> Node0x5568525b7c60;
	Node0x5568525b7d00 [shape=record,label="{%132:\l132:                                              \l  br label %133, !dbg !2916\l}"];
	Node0x5568525b7d00 -> Node0x5568525b7d50;
	Node0x5568525b7d50 [shape=record,label="{%133:\l133:                                              \l  %134 = load i64, i64* %5, align 8, !dbg !2917\l  switch i64 %134, label %212 [\l    i64 7, label %135\l    i64 6, label %146\l    i64 5, label %157\l    i64 4, label %168\l    i64 3, label %179\l    i64 2, label %190\l    i64 1, label %201\l  ], !dbg !2918\l|{<s0>def|<s1>7|<s2>6|<s3>5|<s4>4|<s5>3|<s6>2|<s7>1}}"];
	Node0x5568525b7d50:s0 -> Node0x5568525b7fd0;
	Node0x5568525b7d50:s1 -> Node0x5568525b7da0;
	Node0x5568525b7d50:s2 -> Node0x5568525b7df0;
	Node0x5568525b7d50:s3 -> Node0x5568525b7e40;
	Node0x5568525b7d50:s4 -> Node0x5568525b7e90;
	Node0x5568525b7d50:s5 -> Node0x5568525b7ee0;
	Node0x5568525b7d50:s6 -> Node0x5568525b7f30;
	Node0x5568525b7d50:s7 -> Node0x5568525b7f80;
	Node0x5568525b7da0 [shape=record,label="{%135:\l135:                                              \l  %136 = bitcast i32* %6 to i8*, !dbg !2919\l  %137 = getelementptr inbounds i8, i8* %136, i64 2, !dbg !2919\l  %138 = load i8, i8* %137, align 2, !dbg !2919\l  %139 = zext i8 %138 to i32, !dbg !2919\l  %140 = load i8*, i8** %4, align 8, !dbg !2921\l  %141 = getelementptr inbounds i8, i8* %140, i64 6, !dbg !2922\l  %142 = load i8, i8* %141, align 1, !dbg !2923\l  %143 = zext i8 %142 to i32, !dbg !2923\l  %144 = xor i32 %143, %139, !dbg !2923\l  %145 = trunc i32 %144 to i8, !dbg !2923\l  store i8 %145, i8* %141, align 1, !dbg !2923\l  br label %146, !dbg !2922\l}"];
	Node0x5568525b7da0 -> Node0x5568525b7df0;
	Node0x5568525b7df0 [shape=record,label="{%146:\l146:                                              \l  %147 = bitcast i32* %6 to i8*, !dbg !2924\l  %148 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !2924\l  %149 = load i8, i8* %148, align 1, !dbg !2924\l  %150 = zext i8 %149 to i32, !dbg !2924\l  %151 = load i8*, i8** %4, align 8, !dbg !2925\l  %152 = getelementptr inbounds i8, i8* %151, i64 5, !dbg !2926\l  %153 = load i8, i8* %152, align 1, !dbg !2927\l  %154 = zext i8 %153 to i32, !dbg !2927\l  %155 = xor i32 %154, %150, !dbg !2927\l  %156 = trunc i32 %155 to i8, !dbg !2927\l  store i8 %156, i8* %152, align 1, !dbg !2927\l  br label %157, !dbg !2926\l}"];
	Node0x5568525b7df0 -> Node0x5568525b7e40;
	Node0x5568525b7e40 [shape=record,label="{%157:\l157:                                              \l  %158 = bitcast i32* %6 to i8*, !dbg !2928\l  %159 = getelementptr inbounds i8, i8* %158, i64 0, !dbg !2928\l  %160 = load i8, i8* %159, align 4, !dbg !2928\l  %161 = zext i8 %160 to i32, !dbg !2928\l  %162 = load i8*, i8** %4, align 8, !dbg !2929\l  %163 = getelementptr inbounds i8, i8* %162, i64 4, !dbg !2930\l  %164 = load i8, i8* %163, align 1, !dbg !2931\l  %165 = zext i8 %164 to i32, !dbg !2931\l  %166 = xor i32 %165, %161, !dbg !2931\l  %167 = trunc i32 %166 to i8, !dbg !2931\l  store i8 %167, i8* %163, align 1, !dbg !2931\l  br label %168, !dbg !2930\l}"];
	Node0x5568525b7e40 -> Node0x5568525b7e90;
	Node0x5568525b7e90 [shape=record,label="{%168:\l168:                                              \l  %169 = bitcast i32* %6 to i8*, !dbg !2932\l  %170 = getelementptr inbounds i8, i8* %169, i64 3, !dbg !2932\l  %171 = load i8, i8* %170, align 1, !dbg !2932\l  %172 = zext i8 %171 to i32, !dbg !2932\l  %173 = load i8*, i8** %4, align 8, !dbg !2933\l  %174 = getelementptr inbounds i8, i8* %173, i64 3, !dbg !2934\l  %175 = load i8, i8* %174, align 1, !dbg !2935\l  %176 = zext i8 %175 to i32, !dbg !2935\l  %177 = xor i32 %176, %172, !dbg !2935\l  %178 = trunc i32 %177 to i8, !dbg !2935\l  store i8 %178, i8* %174, align 1, !dbg !2935\l  br label %179, !dbg !2934\l}"];
	Node0x5568525b7e90 -> Node0x5568525b7ee0;
	Node0x5568525b7ee0 [shape=record,label="{%179:\l179:                                              \l  %180 = bitcast i32* %6 to i8*, !dbg !2936\l  %181 = getelementptr inbounds i8, i8* %180, i64 2, !dbg !2936\l  %182 = load i8, i8* %181, align 2, !dbg !2936\l  %183 = zext i8 %182 to i32, !dbg !2936\l  %184 = load i8*, i8** %4, align 8, !dbg !2937\l  %185 = getelementptr inbounds i8, i8* %184, i64 2, !dbg !2938\l  %186 = load i8, i8* %185, align 1, !dbg !2939\l  %187 = zext i8 %186 to i32, !dbg !2939\l  %188 = xor i32 %187, %183, !dbg !2939\l  %189 = trunc i32 %188 to i8, !dbg !2939\l  store i8 %189, i8* %185, align 1, !dbg !2939\l  br label %190, !dbg !2938\l}"];
	Node0x5568525b7ee0 -> Node0x5568525b7f30;
	Node0x5568525b7f30 [shape=record,label="{%190:\l190:                                              \l  %191 = bitcast i32* %6 to i8*, !dbg !2940\l  %192 = getelementptr inbounds i8, i8* %191, i64 1, !dbg !2940\l  %193 = load i8, i8* %192, align 1, !dbg !2940\l  %194 = zext i8 %193 to i32, !dbg !2940\l  %195 = load i8*, i8** %4, align 8, !dbg !2941\l  %196 = getelementptr inbounds i8, i8* %195, i64 1, !dbg !2942\l  %197 = load i8, i8* %196, align 1, !dbg !2943\l  %198 = zext i8 %197 to i32, !dbg !2943\l  %199 = xor i32 %198, %194, !dbg !2943\l  %200 = trunc i32 %199 to i8, !dbg !2943\l  store i8 %200, i8* %196, align 1, !dbg !2943\l  br label %201, !dbg !2942\l}"];
	Node0x5568525b7f30 -> Node0x5568525b7f80;
	Node0x5568525b7f80 [shape=record,label="{%201:\l201:                                              \l  %202 = bitcast i32* %6 to i8*, !dbg !2944\l  %203 = getelementptr inbounds i8, i8* %202, i64 0, !dbg !2944\l  %204 = load i8, i8* %203, align 4, !dbg !2944\l  %205 = zext i8 %204 to i32, !dbg !2944\l  %206 = load i8*, i8** %4, align 8, !dbg !2945\l  %207 = getelementptr inbounds i8, i8* %206, i64 0, !dbg !2946\l  %208 = load i8, i8* %207, align 1, !dbg !2947\l  %209 = zext i8 %208 to i32, !dbg !2947\l  %210 = xor i32 %209, %205, !dbg !2947\l  %211 = trunc i32 %210 to i8, !dbg !2947\l  store i8 %211, i8* %207, align 1, !dbg !2947\l  br label %212, !dbg !2948\l}"];
	Node0x5568525b7f80 -> Node0x5568525b7fd0;
	Node0x5568525b7fd0 [shape=record,label="{%212:\l212:                                              \l  ret void, !dbg !2949\l}"];
}
