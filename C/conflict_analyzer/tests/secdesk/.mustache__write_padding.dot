digraph "CFG for 'mustache__write_padding' function" {
	label="CFG for 'mustache__write_padding' function";

	Node0x55685200e1c0 [shape=record,label="{%1:\l  %2 = alloca i32, align 4\l  %3 = alloca %struct.mustache__builder_stack_s*, align 8\l  %4 = alloca %struct.mustache__instruction_s*, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca i32, align 4\l  store %struct.mustache__builder_stack_s* %0,\l... %struct.mustache__builder_stack_s** %3, align 8\l  call void @llvm.dbg.declare(metadata %struct.mustache__builder_stack_s** %3,\l... metadata !2804, metadata !DIExpression()), !dbg !2805\l  call void @llvm.dbg.declare(metadata %struct.mustache__instruction_s** %4,\l... metadata !2806, metadata !DIExpression()), !dbg !2808\l  %7 = load %struct.mustache__builder_stack_s*,\l... %struct.mustache__builder_stack_s** %3, align 8, !dbg !2809\l  %8 = getelementptr inbounds %struct.mustache__builder_stack_s,\l... %struct.mustache__builder_stack_s* %7, i32 0, i32 0, !dbg !2809\l  %9 = load %struct.mustache_s*, %struct.mustache_s** %8, align 8, !dbg !2809\l  %10 = getelementptr inbounds %struct.mustache_s, %struct.mustache_s* %9, i64\l... 1, !dbg !2809\l  %11 = bitcast %struct.mustache_s* %10 to %struct.mustache__instruction_s*,\l... !dbg !2809\l  store %struct.mustache__instruction_s* %11,\l... %struct.mustache__instruction_s** %4, align 8, !dbg !2808\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !2810, metadata\l... !DIExpression()), !dbg !2812\l  %12 = load %struct.mustache__builder_stack_s*,\l... %struct.mustache__builder_stack_s** %3, align 8, !dbg !2813\l  %13 = getelementptr inbounds %struct.mustache__builder_stack_s,\l... %struct.mustache__builder_stack_s* %12, i32 0, i32 0, !dbg !2813\l  %14 = load %struct.mustache_s*, %struct.mustache_s** %13, align 8, !dbg !2813\l  %15 = getelementptr inbounds %struct.mustache_s, %struct.mustache_s* %14,\l... i64 1, !dbg !2813\l  %16 = bitcast %struct.mustache_s* %15 to %struct.mustache__instruction_s*,\l... !dbg !2813\l  %17 = load %struct.mustache__builder_stack_s*,\l... %struct.mustache__builder_stack_s** %3, align 8, !dbg !2813\l  %18 = getelementptr inbounds %struct.mustache__builder_stack_s,\l... %struct.mustache__builder_stack_s* %17, i32 0, i32 0, !dbg !2813\l  %19 = load %struct.mustache_s*, %struct.mustache_s** %18, align 8, !dbg !2813\l  %20 = getelementptr inbounds %struct.mustache_s, %struct.mustache_s* %19,\l... i32 0, i32 0, !dbg !2813\l  %21 = bitcast %union.anon* %20 to %struct.anon*, !dbg !2813\l  %22 = getelementptr inbounds %struct.anon, %struct.anon* %21, i32 0, i32 0,\l... !dbg !2813\l  %23 = load i32, i32* %22, align 8, !dbg !2813\l  %24 = zext i32 %23 to i64, !dbg !2813\l  %25 = getelementptr inbounds %struct.mustache__instruction_s,\l... %struct.mustache__instruction_s* %16, i64 %24, !dbg !2813\l  %26 = bitcast %struct.mustache__instruction_s* %25 to i8*, !dbg !2813\l  store i8* %26, i8** %5, align 8, !dbg !2812\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !2814, metadata\l... !DIExpression()), !dbg !2816\l  %27 = load %struct.mustache__builder_stack_s*,\l... %struct.mustache__builder_stack_s** %3, align 8, !dbg !2817\l  %28 = getelementptr inbounds %struct.mustache__builder_stack_s,\l... %struct.mustache__builder_stack_s* %27, i32 0, i32 2, !dbg !2818\l  %29 = load i32, i32* %28, align 4, !dbg !2818\l  store i32 %29, i32* %6, align 4, !dbg !2816\l  br label %30, !dbg !2819\l}"];
	Node0x55685200e1c0 -> Node0x55685200e210;
	Node0x55685200e210 [shape=record,label="{%30:\l30:                                               \l  %31 = load i32, i32* %6, align 4, !dbg !2820\l  %32 = icmp ne i32 %31, 0, !dbg !2822\l  br i1 %32, label %33, label %72, !dbg !2822\l|{<s0>T|<s1>F}}"];
	Node0x55685200e210:s0 -> Node0x55685200e260;
	Node0x55685200e210:s1 -> Node0x55685200e3a0;
	Node0x55685200e260 [shape=record,label="{%33:\l33:                                               \l  %34 = load %struct.mustache__builder_stack_s*,\l... %struct.mustache__builder_stack_s** %3, align 8, !dbg !2823\l  %35 = getelementptr inbounds %struct.mustache__builder_stack_s,\l... %struct.mustache__builder_stack_s* %34, i32 0, i32 4, !dbg !2826\l  %36 = load %struct.mustache__builder_stack_s*,\l... %struct.mustache__builder_stack_s** %3, align 8, !dbg !2827\l  %37 = getelementptr inbounds %struct.mustache__builder_stack_s,\l... %struct.mustache__builder_stack_s* %36, i32 0, i32 3, !dbg !2828\l  %38 = load i16, i16* %37, align 8, !dbg !2828\l  %39 = zext i16 %38 to i64, !dbg !2823\l  %40 = getelementptr inbounds [82 x %struct.mustache__section_stack_frame_s],\l... [82 x %struct.mustache__section_stack_frame_s]* %35, i64 0, i64 %39, !dbg\l... !2823\l  %41 = getelementptr inbounds %struct.mustache__section_stack_frame_s,\l... %struct.mustache__section_stack_frame_s* %40, i32 0, i32 0, !dbg !2829\l  %42 = load i8*, i8** %5, align 8, !dbg !2830\l  %43 = load %struct.mustache__instruction_s*,\l... %struct.mustache__instruction_s** %4, align 8, !dbg !2831\l  %44 = load i32, i32* %6, align 4, !dbg !2832\l  %45 = zext i32 %44 to i64, !dbg !2831\l  %46 = getelementptr inbounds %struct.mustache__instruction_s,\l... %struct.mustache__instruction_s* %43, i64 %45, !dbg !2831\l  %47 = getelementptr inbounds %struct.mustache__instruction_s,\l... %struct.mustache__instruction_s* %46, i32 0, i32 1, !dbg !2833\l  %48 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %47, i32 0, i32\l... 2, !dbg !2834\l  %49 = load i32, i32* %48, align 4, !dbg !2834\l  %50 = zext i32 %49 to i64, !dbg !2835\l  %51 = getelementptr inbounds i8, i8* %42, i64 %50, !dbg !2835\l  %52 = load %struct.mustache__instruction_s*,\l... %struct.mustache__instruction_s** %4, align 8, !dbg !2836\l  %53 = load i32, i32* %6, align 4, !dbg !2837\l  %54 = zext i32 %53 to i64, !dbg !2836\l  %55 = getelementptr inbounds %struct.mustache__instruction_s,\l... %struct.mustache__instruction_s* %52, i64 %54, !dbg !2836\l  %56 = getelementptr inbounds %struct.mustache__instruction_s,\l... %struct.mustache__instruction_s* %55, i32 0, i32 1, !dbg !2838\l  %57 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %56, i32 0, i32\l... 3, !dbg !2839\l  %58 = load i16, i16* %57, align 4, !dbg !2839\l  %59 = zext i16 %58 to i32, !dbg !2836\l  %60 = call i32 @mustache_on_text(%struct.mustache_section_s* %41, i8* %51,\l... i32 %59), !dbg !2840\l  %61 = icmp eq i32 %60, -1, !dbg !2841\l  br i1 %61, label %62, label %63, !dbg !2842\l|{<s0>T|<s1>F}}"];
	Node0x55685200e260:s0 -> Node0x55685200e2b0;
	Node0x55685200e260:s1 -> Node0x55685200e300;
	Node0x55685200e2b0 [shape=record,label="{%62:\l62:                                               \l  store i32 -1, i32* %2, align 4, !dbg !2843\l  br label %73, !dbg !2843\l}"];
	Node0x55685200e2b0 -> Node0x55685200e3f0;
	Node0x55685200e300 [shape=record,label="{%63:\l63:                                               \l  br label %64, !dbg !2844\l}"];
	Node0x55685200e300 -> Node0x55685200e350;
	Node0x55685200e350 [shape=record,label="{%64:\l64:                                               \l  %65 = load %struct.mustache__instruction_s*,\l... %struct.mustache__instruction_s** %4, align 8, !dbg !2845\l  %66 = load i32, i32* %6, align 4, !dbg !2846\l  %67 = zext i32 %66 to i64, !dbg !2845\l  %68 = getelementptr inbounds %struct.mustache__instruction_s,\l... %struct.mustache__instruction_s* %65, i64 %67, !dbg !2845\l  %69 = getelementptr inbounds %struct.mustache__instruction_s,\l... %struct.mustache__instruction_s* %68, i32 0, i32 1, !dbg !2847\l  %70 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %69, i32 0, i32\l... 0, !dbg !2848\l  %71 = load i32, i32* %70, align 4, !dbg !2848\l  store i32 %71, i32* %6, align 4, !dbg !2849\l  br label %30, !dbg !2850, !llvm.loop !2851\l}"];
	Node0x55685200e350 -> Node0x55685200e210;
	Node0x55685200e3a0 [shape=record,label="{%72:\l72:                                               \l  store i32 0, i32* %2, align 4, !dbg !2853\l  br label %73, !dbg !2853\l}"];
	Node0x55685200e3a0 -> Node0x55685200e3f0;
	Node0x55685200e3f0 [shape=record,label="{%73:\l73:                                               \l  %74 = load i32, i32* %2, align 4, !dbg !2854\l  ret i32 %74, !dbg !2854\l}"];
}
