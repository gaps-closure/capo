digraph "CFG for 'fio_timer_calc_due' function" {
	label="CFG for 'fio_timer_calc_due' function";

	Node0x5568516f0360 [shape=record,label="{%1:\l  %2 = alloca %struct.rlimit, align 8\l  %3 = alloca i64, align 8\l  %4 = alloca i64, align 8\l  store i64 %0, i64* %3, align 8\l  call void @llvm.dbg.declare(metadata i64* %3, metadata !2804, metadata\l... !DIExpression()), !dbg !2805\l  call void @llvm.dbg.declare(metadata %struct.rlimit* %2, metadata !2806,\l... metadata !DIExpression()), !dbg !2807\l  %5 = call \{ i64, i64 \} @fio_last_tick(), !dbg !2808\l  %6 = bitcast %struct.rlimit* %2 to \{ i64, i64 \}*, !dbg !2808\l  %7 = getelementptr inbounds \{ i64, i64 \}, \{ i64, i64 \}* %6, i32 0, i32 0,\l... !dbg !2808\l  %8 = extractvalue \{ i64, i64 \} %5, 0, !dbg !2808\l  store i64 %8, i64* %7, align 8, !dbg !2808\l  %9 = getelementptr inbounds \{ i64, i64 \}, \{ i64, i64 \}* %6, i32 0, i32 1,\l... !dbg !2808\l  %10 = extractvalue \{ i64, i64 \} %5, 1, !dbg !2808\l  store i64 %10, i64* %9, align 8, !dbg !2808\l  %11 = load i64, i64* %3, align 8, !dbg !2809\l  %12 = icmp uge i64 %11, 1000, !dbg !2811\l  br i1 %12, label %13, label %24, !dbg !2812\l|{<s0>T|<s1>F}}"];
	Node0x5568516f0360:s0 -> Node0x5568516f3f20;
	Node0x5568516f0360:s1 -> Node0x5568516f3f70;
	Node0x5568516f3f20 [shape=record,label="{%13:\l13:                                               \l  call void @llvm.dbg.declare(metadata i64* %4, metadata !2813, metadata\l... !DIExpression()), !dbg !2816\l  %14 = load i64, i64* %3, align 8, !dbg !2817\l  %15 = udiv i64 %14, 1000, !dbg !2818\l  store i64 %15, i64* %4, align 8, !dbg !2816\l  %16 = load i64, i64* %4, align 8, !dbg !2819\l  %17 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %2, i32 0, i32\l... 0, !dbg !2820\l  %18 = load i64, i64* %17, align 8, !dbg !2821\l  %19 = add i64 %18, %16, !dbg !2821\l  store i64 %19, i64* %17, align 8, !dbg !2821\l  %20 = load i64, i64* %4, align 8, !dbg !2822\l  %21 = mul i64 %20, 1000, !dbg !2823\l  %22 = load i64, i64* %3, align 8, !dbg !2824\l  %23 = sub i64 %22, %21, !dbg !2824\l  store i64 %23, i64* %3, align 8, !dbg !2824\l  br label %24, !dbg !2825\l}"];
	Node0x5568516f3f20 -> Node0x5568516f3f70;
	Node0x5568516f3f70 [shape=record,label="{%24:\l24:                                               \l  %25 = load i64, i64* %3, align 8, !dbg !2826\l  %26 = mul i64 %25, 1000000, !dbg !2827\l  %27 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %2, i32 0, i32\l... 1, !dbg !2828\l  %28 = load i64, i64* %27, align 8, !dbg !2829\l  %29 = add i64 %28, %26, !dbg !2829\l  store i64 %29, i64* %27, align 8, !dbg !2829\l  %30 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %2, i32 0, i32\l... 1, !dbg !2830\l  %31 = load i64, i64* %30, align 8, !dbg !2830\l  %32 = icmp sge i64 %31, 1000000000, !dbg !2832\l  br i1 %32, label %33, label %40, !dbg !2833\l|{<s0>T|<s1>F}}"];
	Node0x5568516f3f70:s0 -> Node0x5568516f3fc0;
	Node0x5568516f3f70:s1 -> Node0x5568516f4010;
	Node0x5568516f3fc0 [shape=record,label="{%33:\l33:                                               \l  %34 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %2, i32 0, i32\l... 1, !dbg !2834\l  %35 = load i64, i64* %34, align 8, !dbg !2836\l  %36 = sub nsw i64 %35, 1000000000, !dbg !2836\l  store i64 %36, i64* %34, align 8, !dbg !2836\l  %37 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %2, i32 0, i32\l... 0, !dbg !2837\l  %38 = load i64, i64* %37, align 8, !dbg !2838\l  %39 = add nsw i64 %38, 1, !dbg !2838\l  store i64 %39, i64* %37, align 8, !dbg !2838\l  br label %40, !dbg !2839\l}"];
	Node0x5568516f3fc0 -> Node0x5568516f4010;
	Node0x5568516f4010 [shape=record,label="{%40:\l40:                                               \l  %41 = bitcast %struct.rlimit* %2 to \{ i64, i64 \}*, !dbg !2840\l  %42 = load \{ i64, i64 \}, \{ i64, i64 \}* %41, align 8, !dbg !2840\l  ret \{ i64, i64 \} %42, !dbg !2840\l}"];
}
