digraph "CFG for 'fio_realloc2' function" {
	label="CFG for 'fio_realloc2' function";

	Node0x55685164c640 [shape=record,label="{%3:\l  %4 = alloca i8*, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i8*, align 8\l  store i8* %0, i8** %5, align 8\l  call void @llvm.dbg.declare(metadata i8** %5, metadata !2804, metadata\l... !DIExpression()), !dbg !2805\l  store i64 %1, i64* %6, align 8\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !2806, metadata\l... !DIExpression()), !dbg !2807\l  store i64 %2, i64* %7, align 8\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !2808, metadata\l... !DIExpression()), !dbg !2809\l  %9 = load i8*, i8** %5, align 8, !dbg !2810\l  %10 = icmp ne i8* %9, null, !dbg !2810\l  br i1 %10, label %11, label %14, !dbg !2812\l|{<s0>T|<s1>F}}"];
	Node0x55685164c640:s0 -> Node0x55685164d360;
	Node0x55685164c640:s1 -> Node0x55685164d3b0;
	Node0x55685164d360 [shape=record,label="{%11:\l11:                                               \l  %12 = load i8*, i8** %5, align 8, !dbg !2813\l  %13 = icmp eq i8* %12, bitcast (x86_fp80* @on_malloc_zero to i8*), !dbg !2814\l  br i1 %13, label %14, label %20, !dbg !2815\l|{<s0>T|<s1>F}}"];
	Node0x55685164d360:s0 -> Node0x55685164d3b0;
	Node0x55685164d360:s1 -> Node0x55685164d400;
	Node0x55685164d3b0 [shape=record,label="{%14:\l14:                                               \l  %15 = load i64, i64* %6, align 8, !dbg !2816\l  %16 = call noalias i8* @fio_malloc(i64 %15), !dbg !2818\l  %17 = ptrtoint i8* %16 to i64, !dbg !2818\l  %18 = and i64 %17, 15, !dbg !2818\l  %19 = icmp eq i64 %18, 0, !dbg !2818\l  call void @llvm.assume(i1 %19), !dbg !2818\l  store i8* %16, i8** %4, align 8, !dbg !2819\l  br label %82, !dbg !2819\l}"];
	Node0x55685164d3b0 -> Node0x55685164d770;
	Node0x55685164d400 [shape=record,label="{%20:\l20:                                               \l  %21 = load i64, i64* %6, align 8, !dbg !2820\l  %22 = icmp ne i64 %21, 0, !dbg !2820\l  br i1 %22, label %24, label %23, !dbg !2822\l|{<s0>T|<s1>F}}"];
	Node0x55685164d400:s0 -> Node0x55685164d4a0;
	Node0x55685164d400:s1 -> Node0x55685164d450;
	Node0x55685164d450 [shape=record,label="{%23:\l23:                                               \l  br label %76, !dbg !2823\l}"];
	Node0x55685164d450 -> Node0x55685164d720;
	Node0x55685164d4a0 [shape=record,label="{%24:\l24:                                               \l  %25 = load i8*, i8** %5, align 8, !dbg !2825\l  %26 = ptrtoint i8* %25 to i64, !dbg !2827\l  %27 = and i64 %26, 32767, !dbg !2828\l  %28 = icmp eq i64 %27, 16, !dbg !2829\l  br i1 %28, label %29, label %33, !dbg !2830\l|{<s0>T|<s1>F}}"];
	Node0x55685164d4a0:s0 -> Node0x55685164d4f0;
	Node0x55685164d4a0:s1 -> Node0x55685164d540;
	Node0x55685164d4f0 [shape=record,label="{%29:\l29:                                               \l  %30 = load i8*, i8** %5, align 8, !dbg !2831\l  %31 = load i64, i64* %6, align 8, !dbg !2833\l  %32 = call i8* @big_realloc(i8* %30, i64 %31), !dbg !2834\l  store i8* %32, i8** %4, align 8, !dbg !2835\l  br label %82, !dbg !2835\l}"];
	Node0x55685164d4f0 -> Node0x55685164d770;
	Node0x55685164d540 [shape=record,label="{%33:\l33:                                               \l  call void @llvm.dbg.declare(metadata i8** %8, metadata !2836, metadata\l... !DIExpression()), !dbg !2837\l  %34 = load i64, i64* %6, align 8, !dbg !2838\l  %35 = call noalias i8* @fio_malloc(i64 %34), !dbg !2839\l  %36 = ptrtoint i8* %35 to i64, !dbg !2839\l  %37 = and i64 %36, 15, !dbg !2839\l  %38 = icmp eq i64 %37, 0, !dbg !2839\l  call void @llvm.assume(i1 %38), !dbg !2839\l  store i8* %35, i8** %8, align 8, !dbg !2837\l  %39 = load i8*, i8** %8, align 8, !dbg !2840\l  %40 = icmp ne i8* %39, null, !dbg !2840\l  br i1 %40, label %42, label %41, !dbg !2843\l|{<s0>T|<s1>F}}"];
	Node0x55685164d540:s0 -> Node0x55685164d5e0;
	Node0x55685164d540:s1 -> Node0x55685164d590;
	Node0x55685164d590 [shape=record,label="{%41:\l41:                                               \l  store i8* null, i8** %4, align 8, !dbg !2844\l  br label %82, !dbg !2844\l}"];
	Node0x55685164d590 -> Node0x55685164d770;
	Node0x55685164d5e0 [shape=record,label="{%42:\l42:                                               \l  %43 = load i64, i64* %6, align 8, !dbg !2845\l  %44 = lshr i64 %43, 4, !dbg !2846\l  %45 = load i64, i64* %6, align 8, !dbg !2847\l  %46 = and i64 %45, 15, !dbg !2848\l  %47 = icmp ne i64 %46, 0, !dbg !2849\l  %48 = xor i1 %47, true, !dbg !2849\l  %49 = xor i1 %48, true, !dbg !2850\l  %50 = zext i1 %49 to i32, !dbg !2850\l  %51 = sext i32 %50 to i64, !dbg !2851\l  %52 = add i64 %44, %51, !dbg !2852\l  store i64 %52, i64* %6, align 8, !dbg !2853\l  %53 = load i64, i64* %7, align 8, !dbg !2854\l  %54 = lshr i64 %53, 4, !dbg !2855\l  %55 = load i64, i64* %7, align 8, !dbg !2856\l  %56 = and i64 %55, 15, !dbg !2857\l  %57 = icmp ne i64 %56, 0, !dbg !2858\l  %58 = xor i1 %57, true, !dbg !2858\l  %59 = xor i1 %58, true, !dbg !2859\l  %60 = zext i1 %59 to i32, !dbg !2859\l  %61 = sext i32 %60 to i64, !dbg !2860\l  %62 = add i64 %54, %61, !dbg !2861\l  store i64 %62, i64* %7, align 8, !dbg !2862\l  %63 = load i8*, i8** %8, align 8, !dbg !2863\l  %64 = load i8*, i8** %5, align 8, !dbg !2864\l  %65 = load i64, i64* %7, align 8, !dbg !2865\l  %66 = load i64, i64* %6, align 8, !dbg !2866\l  %67 = icmp ugt i64 %65, %66, !dbg !2867\l  br i1 %67, label %68, label %70, !dbg !2865\l|{<s0>T|<s1>F}}"];
	Node0x55685164d5e0:s0 -> Node0x55685164d630;
	Node0x55685164d5e0:s1 -> Node0x55685164d680;
	Node0x55685164d630 [shape=record,label="{%68:\l68:                                               \l  %69 = load i64, i64* %6, align 8, !dbg !2868\l  br label %72, !dbg !2865\l}"];
	Node0x55685164d630 -> Node0x55685164d6d0;
	Node0x55685164d680 [shape=record,label="{%70:\l70:                                               \l  %71 = load i64, i64* %7, align 8, !dbg !2869\l  br label %72, !dbg !2865\l}"];
	Node0x55685164d680 -> Node0x55685164d6d0;
	Node0x55685164d6d0 [shape=record,label="{%72:\l72:                                               \l  %73 = phi i64 [ %69, %68 ], [ %71, %70 ], !dbg !2865\l  call void @fio_memcpy(i8* %63, i8* %64, i64 %73), !dbg !2870\l  %74 = load i8*, i8** %5, align 8, !dbg !2871\l  call void @block_slice_free(i8* %74), !dbg !2872\l  %75 = load i8*, i8** %8, align 8, !dbg !2873\l  store i8* %75, i8** %4, align 8, !dbg !2874\l  br label %82, !dbg !2874\l}"];
	Node0x55685164d6d0 -> Node0x55685164d770;
	Node0x55685164d720 [shape=record,label="{%76:\l76:                                               \l  call void @llvm.dbg.label(metadata !2875), !dbg !2876\l  %77 = load i8*, i8** %5, align 8, !dbg !2877\l  call void @fio_free(i8* %77), !dbg !2878\l  %78 = call noalias i8* @fio_malloc(i64 0), !dbg !2879\l  %79 = ptrtoint i8* %78 to i64, !dbg !2879\l  %80 = and i64 %79, 15, !dbg !2879\l  %81 = icmp eq i64 %80, 0, !dbg !2879\l  call void @llvm.assume(i1 %81), !dbg !2879\l  store i8* %78, i8** %4, align 8, !dbg !2880\l  br label %82, !dbg !2880\l}"];
	Node0x55685164d720 -> Node0x55685164d770;
	Node0x55685164d770 [shape=record,label="{%82:\l82:                                               \l  %83 = load i8*, i8** %4, align 8, !dbg !2881\l  ret i8* %83, !dbg !2881\l}"];
}
